scale_shape_manual(name = "Comparison",
values = c(3, 4, 3, 4))
agree_none = subset(agreelong, effect == "None")
w41 = ggplot(agree_none) +
geom_line(aes(x=N,
y=percent,
group = comparison,
linetype = comparison,
colour = comparison),
size=0.75) +
labs(title="Negligible Effects") +
coord_cartesian(ylim = c(0,101)) +
ylab("Percent Agreement") +
xlab("log(N)") +
cleanup +
geom_point(data=agree_none,
aes(x = N,
y = percent,
shape = comparison),
size = 4) +
scale_linetype_manual(name = "Comparison",
values=c("solid", "solid","dashed", "dashed")) +
scale_color_manual(name = "Comparison",
values = c("gray50","gray50","gray", "gray")) +
scale_shape_manual(name = "Comparison",
values = c(3, 4, 3, 4))
####put the graphs together####
legend = get_legend(w11)
wrow1 <- plot_grid( w41 + theme(legend.position="none"),
w31 + theme(legend.position="none"),
w21 + theme(legend.position="none"),
w11 + theme(legend.position=c(.6,.25)),
hjust = -1,
nrow = 2
)
wrow1
comparedata = read.csv("overall_sims_shiny.csv")
comparedata$N = factor(comparedata$N)
##deal with Inf BF values
large = length(unique(comparedata$overallBF))
comparedata$overallBF[is.infinite(comparedata$overallBF)] = sort(unique(comparedata$overallBF))[large-1]
comparedata$overallBF = log(comparedata$overallBF)
##create starred oomchance values
comparedata$star = as.factor(as.numeric(comparedata$oomchance <=.05))
##select only none data
comparenone = subset(comparedata, stdev == 11.5)
comparemed = subset(comparedata, stdev == .5)
pccbfnone = ggplot(comparenone, aes(oompcc, overallBF)) +
cleanup +
geom_point(data = comparenone, aes(shape = star, size = N, color = N)) +
xlab("OOM PCC Value") +
ylab("log(Bayes Factor)") +
scale_shape_manual(name = "c-Value",
labels = c(">.05", "<=.05"),
values = c(16,4)) +
scale_color_grey() +
labs(title="Negligible Effects")
pccbfmed = ggplot(comparemed, aes(oompcc, overallBF)) +
cleanup +
geom_point(data = comparemed, aes(shape = star, size = N, color = N)) +
xlab("OOM PCC Value") +
ylab("log(Bayes Factor)") +
scale_shape_manual(name = "c-Value",
labels = c(">.05", "<=.05"),
values = c(16,4)) +
scale_color_grey() +
labs(title="Medium Effects")
pccpnone = ggplot(comparenone, aes(oompcc, omniP)) +
cleanup +
geom_point(data = comparenone, aes(shape = star, size = N, color = N)) +
xlab("OOM PCC Value") +
ylab("p-Value") +
scale_shape_manual(name = "c-Value",
labels = c(">.05", "<=.05"),
values = c(16,4)) +
scale_color_grey() +
labs(title="Negligible Effects")
pccpmed = ggplot(comparemed, aes(oompcc, omniP)) +
cleanup +
geom_point(data = comparemed, aes(shape = star, size = N, color = N)) +
xlab("OOM PCC Value") +
ylab("p-Value") +
scale_shape_manual(name = "c-Value",
labels = c(">.05", "<=.05"),
values = c(16,4)) +
scale_color_grey() +
labs(title="Medium Effects")
pccgraph <- plot_grid( pccbfnone + theme(legend.position="none"),
pccbfmed + theme(legend.position="none"),
pccpnone + theme(legend.position="none"),
pccpmed + theme(legend.position=c(.8,.60)),
hjust = -1,
nrow = 2)
pccgraph
pccgraph
pccpmed + theme(legend.position=c(.8,.60))
pccpmed + theme(legend.position=c(.8,.50))
pccbfmed
summary(comparemed)
summary(comparenone)
comparedata = read.csv("overall_sims_shiny.csv")
comparedata$N = factor(comparedata$N)
##deal with Inf BF values
large = length(unique(comparedata$overallBF))
comparedata$overallBF[is.infinite(comparedata$overallBF)] = sort(unique(comparedata$overallBF))[large-1]
comparedata$overallBF = log(comparedata$overallBF)
##create starred oomchance values
comparedata$star = as.factor(as.numeric(comparedata$oomchance <=.05))
##select only none data
comparenone = subset(comparedata, stdev == 11.5)
comparemed = subset(comparedata, stdev == .5)
pccbfnone = ggplot(comparenone, aes(oompcc, overallBF)) +
cleanup +
geom_point(data = comparenone, aes(shape = star, size = N, color = N)) +
xlab("OOM PCC Value") +
ylab("log(Bayes Factor)") +
scale_shape_manual(name = "c-Value",
labels = c(">.05", "<=.05"),
values = c(16,4)) +
scale_color_grey() +
labs(title="Negligible Effects") +
coord_cartesian(ylim = c(-5, 500))
pccbfmed = ggplot(comparemed, aes(oompcc, overallBF)) +
cleanup +
geom_point(data = comparemed, aes(shape = star, size = N, color = N)) +
xlab("OOM PCC Value") +
ylab("log(Bayes Factor)") +
scale_shape_manual(name = "c-Value",
labels = c(">.05", "<=.05"),
values = c(16,4)) +
scale_color_grey() +
labs(title="Medium Effects") +
coord_cartesian(ylim = c(-5, 500))
pccpnone = ggplot(comparenone, aes(oompcc, omniP)) +
cleanup +
geom_point(data = comparenone, aes(shape = star, size = N, color = N)) +
xlab("OOM PCC Value") +
ylab("p-Value") +
scale_shape_manual(name = "c-Value",
labels = c(">.05", "<=.05"),
values = c(16,4)) +
scale_color_grey() +
labs(title="Negligible Effects")
pccpmed = ggplot(comparemed, aes(oompcc, omniP)) +
cleanup +
geom_point(data = comparemed, aes(shape = star, size = N, color = N)) +
xlab("OOM PCC Value") +
ylab("p-Value") +
scale_shape_manual(name = "c-Value",
labels = c(">.05", "<=.05"),
values = c(16,4)) +
scale_color_grey() +
labs(title="Medium Effects")
pccgraph <- plot_grid( pccbfnone + theme(legend.position="none"),
pccbfmed + theme(legend.position="none"),
pccpnone + theme(legend.position="none"),
pccpmed + theme(legend.position=c(.8,.50)),
hjust = -1,
nrow = 2)
pccgraph
pccgraph
devtools::install_github("trinker/numform")
#devtools::install_github("trinker/numform")
library(numform)
pccpmed = ggplot(comparemed, aes(oompcc, omniP)) +
cleanup +
geom_point(data = comparemed, aes(shape = star, size = N, color = N)) +
xlab("OOM PCC Value") +
ylab("p-Value") +
scale_shape_manual(name = "c-Value",
labels = c(">.05", "<=.05"),
values = c(16,4)) +
scale_color_grey() +
labs(title="Medium Effects") +
scale_y_continuous(labels = numform::ff_num(zero = 0))
pccpmed
pccbfnone = ggplot(comparenone, aes(oompcc, overallBF)) +
cleanup +
geom_point(data = comparenone, aes(shape = star, size = N, color = N)) +
xlab("OOM PCC Value") +
ylab("log(Bayes Factor)") +
scale_shape_manual(name = "c-Value",
labels = c(">.05", "<=.05"),
values = c(16,4)) +
scale_color_grey() +
labs(title="Negligible Effects") +
scale_x_continuous(labels = numform::ff_num(zero = 0))
pccbfnone
pccbfnone = ggplot(comparenone, aes(oompcc, overallBF)) +
cleanup +
geom_point(data = comparenone, aes(shape = star, size = N, color = N)) +
xlab("OOM PCC Value") +
ylab("log(Bayes Factor)") +
scale_shape_manual(name = "c-Value",
labels = c(">.05", "<=.05"),
values = c(16,4)) +
scale_color_grey() +
labs(title="Negligible Effects") +
scale_x_continuous(labels = numform::ff_num(zero = 0))
pccbfmed = ggplot(comparemed, aes(oompcc, overallBF)) +
cleanup +
geom_point(data = comparemed, aes(shape = star, size = N, color = N)) +
xlab("OOM PCC Value") +
ylab("log(Bayes Factor)") +
scale_shape_manual(name = "c-Value",
labels = c(">.05", "<=.05"),
values = c(16,4)) +
scale_color_grey() +
labs(title="Medium Effects") +
scale_x_continuous(labels = numform::ff_num(zero = 0))
pccpnone = ggplot(comparenone, aes(oompcc, omniP)) +
cleanup +
geom_point(data = comparenone, aes(shape = star, size = N, color = N)) +
xlab("OOM PCC Value") +
ylab("p-Value") +
scale_shape_manual(name = "c-Value",
labels = c(">.05", "<=.05"),
values = c(16,4)) +
scale_color_grey() +
labs(title="Negligible Effects") +
scale_y_continuous(labels = numform::ff_num(zero = 0)) +
scale_x_continuous(labels = numform::ff_num(zero = 0))
pccpmed = ggplot(comparemed, aes(oompcc, omniP)) +
cleanup +
geom_point(data = comparemed, aes(shape = star, size = N, color = N)) +
xlab("OOM PCC Value") +
ylab("p-Value") +
scale_shape_manual(name = "c-Value",
labels = c(">.05", "<=.05"),
values = c(16,4)) +
scale_color_grey() +
labs(title="Medium Effects") +
scale_y_continuous(labels = numform::ff_num(zero = 0)) +
scale_x_continuous(labels = numform::ff_num(zero = 0))
pccgraph <- plot_grid( pccbfnone + theme(legend.position="none"),
pccpnone + theme(legend.position="none"),
pccbfmed + theme(legend.position="none"),
pccpmed + theme(legend.position=c(.8,.50)),
hjust = -1,
nrow = 2)
pccgraph
comparedata = read.csv("overall_sims_shiny.csv")
comparedata$N = factor(comparedata$N)
##deal with Inf BF values
large = length(unique(comparedata$overallBF))
comparedata$overallBF[is.infinite(comparedata$overallBF)] = sort(unique(comparedata$overallBF))[large-1]
comparedata$overallBF = log(comparedata$overallBF)
##create starred oomchance values
comparedata$star = as.factor(as.numeric(comparedata$oomchance <=.05))
##select only none data
comparenone = subset(comparedata, stdev == 11.5)
comparemed = subset(comparedata, stdev == .5)
pccbfnone = ggplot(comparenone, aes(oompcc, overallBF)) +
cleanup +
geom_point(data = comparenone, aes(shape = star, size = N, color = N)) +
xlab("OOM PCC Value") +
ylab("log(Bayes Factor)") +
scale_shape_manual(name = "c-Value",
labels = c(">.05", "<=.05"),
values = c(16,4)) +
scale_color_grey() +
labs(title="Negligible Effects") +
scale_x_continuous(labels = numform::ff_num(zero = 0))
library(ggplot)
library(ggplot2)
comparedata = read.csv("overall_sims_shiny.csv")
comparedata$N = factor(comparedata$N)
##deal with Inf BF values
large = length(unique(comparedata$overallBF))
comparedata$overallBF[is.infinite(comparedata$overallBF)] = sort(unique(comparedata$overallBF))[large-1]
comparedata$overallBF = log(comparedata$overallBF)
##create starred oomchance values
comparedata$star = as.factor(as.numeric(comparedata$oomchance <=.05))
##select only none data
comparenone = subset(comparedata, stdev == 11.5)
comparemed = subset(comparedata, stdev == .5)
pccbfnone = ggplot(comparenone, aes(oompcc, overallBF)) +
cleanup +
geom_point(data = comparenone, aes(shape = star, size = N, color = N)) +
xlab("OOM PCC Value") +
ylab("log(Bayes Factor)") +
scale_shape_manual(name = "c-Value",
labels = c(">.05", "<=.05"),
values = c(16,4)) +
scale_color_grey() +
labs(title="Negligible Effects") +
scale_x_continuous(labels = numform::ff_num(zero = 0))
library(numform)
cleanup = theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(colour = "black"),
axis.line.y = element_line(colour = "black"),
legend.key = element_rect(fill = "white"),
text = element_text(size = 11),
axis.text.x = element_text(size = 9),
axis.text.y = element_text(size = 9))
##select only none data
comparenone = subset(comparedata, stdev == 11.5)
comparemed = subset(comparedata, stdev == .5)
pccbfnone = ggplot(comparenone, aes(oompcc, overallBF)) +
cleanup +
geom_point(data = comparenone, aes(shape = star, size = N, color = N)) +
xlab("OOM PCC Value") +
ylab("log(Bayes Factor)") +
scale_shape_manual(name = "c-Value",
labels = c(">.05", "<=.05"),
values = c(16,4)) +
scale_color_grey() +
labs(title="Negligible Effects") +
scale_x_continuous(labels = numform::ff_num(zero = 0))
pccbfmed = ggplot(comparemed, aes(oompcc, overallBF)) +
cleanup +
geom_point(data = comparemed, aes(shape = star, size = N, color = N)) +
xlab("OOM PCC Value") +
ylab("log(Bayes Factor)") +
scale_shape_manual(name = "c-Value",
labels = c(">.05", "<=.05"),
values = c(16,4)) +
scale_color_grey() +
labs(title="Medium Effects") +
scale_x_continuous(labels = numform::ff_num(zero = 0))
pccbfmed = ggplot(comparemed, aes(oompcc, overallBF)) +
cleanup +
geom_point(data = comparemed, aes(shape = star, size = N, color = N)) +
xlab("OOM PCC Value") +
ylab("log(Bayes Factor)") +
scale_shape_manual(name = "c-Value",
labels = c(">.05", "<=.05"),
values = c(16,4)) +
scale_color_grey() +
labs(title="Medium Effects") +
scale_x_continuous(labels = numform::ff_num(zero = 0))
pccpnone = ggplot(comparenone, aes(oompcc, omniP)) +
cleanup +
geom_point(data = comparenone, aes(shape = star, size = N, color = N)) +
xlab("OOM PCC Value") +
ylab("p-Value") +
scale_shape_manual(name = "c-Value",
labels = c(">.05", "<=.05"),
values = c(16,4)) +
scale_color_grey() +
labs(title="Negligible Effects") +
scale_y_continuous(labels = numform::ff_num(zero = 0)) +
scale_x_continuous(labels = numform::ff_num(zero = 0))
pccpmed = ggplot(comparemed, aes(oompcc, omniP)) +
cleanup +
geom_point(data = comparemed, aes(shape = star, size = N, color = N)) +
xlab("OOM PCC Value") +
ylab("p-Value") +
scale_shape_manual(name = "c-Value",
labels = c(">.05", "<=.05"),
values = c(16,4)) +
scale_color_grey() +
labs(title="Medium Effects") +
scale_y_continuous(labels = numform::ff_num(zero = 0)) +
scale_x_continuous(labels = numform::ff_num(zero = 0))
pccgraph <- plot_grid( pccbfnone + theme(legend.position="none"),
pccpnone + theme(legend.position="none"),
pccbfmed + theme(legend.position="none"),
pccpmed + theme(legend.position=c(.8,.50)),
hjust = -1,
nrow = 2)
library(cowplot)
pccgraph <- plot_grid( pccbfnone + theme(legend.position="none"),
pccpnone + theme(legend.position="none"),
pccbfmed + theme(legend.position="none"),
pccpmed + theme(legend.position=c(.8,.50)),
hjust = -1,
nrow = 2)
pccgraph
setDT(total.escape)[, id := .GRP, by = pawprint]
#re-format items as the following:
# person   item   time1   time2
#    1      1        5    6
#     1      2       3    7
library(data.table)
setDT(total.escape)[, id := .GRP, by = pawprint]
library("car")
library("ggplot2")
library("ez")
library("reshape")
library(Hmisc)
library(psych)
#import data
library(readr)
escape <- read.csv("/Users/kdvdnf/Box\ Sync/Mizzou\ Projects/Screening\ Cues\ Questionnaire/CFA.ICC.Validity-Fall\ 2017/Data/escape.csv")
#View(escape)
escape$race.f <- factor(escape$race, levels = c(1:6), labels = c("Caucasian", "African-American", "Asian/Pacific Islander","American Indian/Alaska Native", "Hispanic/Latino(a)", "Other"))
escape$gender.f<- factor(escape$gender, levels = c(1,2), labels = c("Male", "Female"))
escape$race.di=recode(escape$race, "1=1; 2=0;3=0; 4=0; 5=0; 6=0")
escape$gender.di=recode(escape$gender, "1=0; 2=1")
names(escape)
#Scoring Scales for ESCAPE study
#12.10.17
#benefit 3 (item 10) and fam 6 (item 27) taken out as of 12.24 due to poor loading.
#Scoring escape items
#accuracy: 4, 6, 9, 11,15, 18, 22, 24, 25
#benefit:2, 8,  12,14, 19, 26
#cost:1, 3, 7
#familiarity: 5, 13, 17, 21, 23
#personal preference:16, 20, 28
#start 389
escape<-escape[,c("pawprint","escape_1"     ,         "escape_2"      ,
"escape_3"  ,            "escape_4"  ,            "escape_5",
"escape_6"   ,           "escape_7"   ,           "escape_8" ,
"escape_9"    ,            "escape_11" ,
"escape_12"    ,         "escape_13"    ,         "escape_14"  ,
"escape_15"      ,       "escape_16"      ,       "escape_17"    ,
"escape_18"      ,       "escape_19"      ,       "escape_20"    ,
"escape_21"       ,      "escape_22"       ,      "escape_23"     ,
"escape_24"        ,     "escape_25"        ,     "escape_26"      ,
"escape_28" )]
escape<-na.omit(escape)
View(escape)
escape$escape_1=recode(escape$escape_1,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_2=recode(escape$escape_2,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_3=recode(escape$escape_3,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_4=recode(escape$escape_4,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_5=recode(escape$escape_5,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_6=recode(escape$escape_6,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_7=recode(escape$escape_7,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_8=recode(escape$escape_8,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_9=recode(escape$escape_9,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_11=recode(escape$escape_11,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_12=recode(escape$escape_12,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_13=recode(escape$escape_13,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_14=recode(escape$escape_14,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_15=recode(escape$escape_15,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_16=recode(escape$escape_16,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_17=recode(escape$escape_17,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_18=recode(escape$escape_18,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_19=recode(escape$escape_19,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_20=recode(escape$escape_20,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_21=recode(escape$escape_21,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_22=recode(escape$escape_22,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_23=recode(escape$escape_23,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_24=recode(escape$escape_24,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_25=recode(escape$escape_25,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_26=recode(escape$escape_26,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
escape$escape_28=recode(escape$escape_28,  "1=0; 2=1; 3=2; 4=3; 5=4; 6=5; 7=6")
table(escape$escape_1)
#now down to 369
escape$escape.acc=(escape$escape_4+ escape$escape_6+ escape$escape_9+ escape$escape_11+ escape$escape_15+ escape$escape_18+ escape$escape_22+ escape$escape_24+ escape$escape_25)/9
escape$escape.ben=(escape$escape_2+ escape$escape_8+ escape$escape_12+ escape$escape_14+ escape$escape_19+ escape$escape_26)/6
escape$escape.cost=(escape$escape_1+ escape$escape_3+ escape$escape_7)/3
escape$escape.fam=(escape$escape_5+ escape$escape_13+ escape$escape_17+escape$escape_21+ escape$escape_23)/5
escape$escape.pref=(escape$escape_16+ escape$escape_20+ escape$escape_28)/3
table(escape$escape.acc)
hist(escape$escape.acc)
hist(escape$escape.ben)
hist(escape$escape.fam)
hist(escape$escape.cost)
hist(escape$escape.pref)
######################################### Test-Retest Reliability ##############################
#first need to combine pretest data and experimental data
pre.test <- read.csv("/Users/kdvdnf/Box\ Sync/Mizzou\ Projects/Screening\ Cues\ Questionnaire/CFA.ICC.Validity-Fall\ 2017/Data/Pretest\ data_FS17.csv")
pre.test$escape.pre.acc=(pre.test$escape1.4+ pre.test$escape1.6+ pre.test$escape1.9+ pre.test$escape1.11+ pre.test$escape1.15+ pre.test$escape1.18+ pre.test$escape1.22+ pre.test$escape1.24+ pre.test$escape1.25)/9
pre.test$escape.pre.ben=(pre.test$escape1.2+ pre.test$escape1.8+ pre.test$escape1.12+ pre.test$escape1.14+ pre.test$escape1.19+ pre.test$escape1.26)/6
pre.test$escape.pre.cost=(pre.test$escape1.1+ pre.test$escape1.3+ pre.test$escape1.7)/3
pre.test$escape.pre.fam=(pre.test$escape1.5+ pre.test$escape1.13+ pre.test$escape1.17+pre.test$escape1.21+ pre.test$escape1.23)/5
pre.test$escape.pre.pref=(pre.test$escape1.16+ pre.test$escape1.20+ pre.test$escape1.28)/3
table(pre.test$escape.pre.acc)
DF.pre = pre.test[ , c(  "escape.pre.acc", "escape.pre.ben", "escape.pre.fam", "escape.pre.cost",  "escape.pre.pref" )]
pre.test$priority.pre<- (colnames(DF.pre)[max.col(DF.pre,ties.method="first")])
table(pre.test$priority.pre)
#View(pre.test)
#get new dataset for mplus with  all in
total.mplus<-merge(pre.test, escape,  by="pawprint", all = TRUE)
write.table(total.mplus, file="/Users/kdvdnf/Box\ Sync/Mizzou\ Projects/Screening\ Cues\ Questionnaire/CFA.ICC.Validity-Fall\ 2017/Data/reliability.all.dat", row.names=FALSE, sep="\t", quote=FALSE)
total<-merge(escape, pre.test, by="pawprint")
#write.csv(total, file="total.data.csv")
#this takes us down to 189 observations
#need to score pre-test items
#Scoring escape items
#accuracy: 4, 6, 9, 11,15, 18, 22, 24, 25
#benefit:2, 8,  12,14, 19, 26
#cost:1, 3, 7
#familiarity: 5, 13, 17, 21, 23
#personal preference:16, 20, 28
plot(total$escape.pre.acc, total$escape.acc)
plot(total$escape.pre.ben, total$escape.ben)
plot(total$escape.pre.cost, total$escape.cost)
plot(total$escape.pre.fam, total$escape.fam)
plot(total$escape.pre.pref, total$escape.pref)
acc = total[ , c("escape.acc" , "escape.pre.acc")]
ben = total[ , c("escape.ben" , "escape.pre.ben")]
cost = total[ , c("escape.cost" , "escape.pre.cost")]
fam = total[ , c("escape.fam" , "escape.pre.fam")]
pref = total[ , c("escape.pref" , "escape.pre.pref")]
summary(total)
names(total)
#using ICC from psych package
#want ICC2
ICC(acc,missing=FALSE,alpha=.05)
ICC(ben,missing=FALSE,alpha=.05)
ICC(cost,missing=FALSE,alpha=.05)
ICC(fam,missing=FALSE,alpha=.05)
ICC(pref,missing=FALSE,alpha=.05)
hist(total$escape.acc)
total.escape= total[ , c("escape_1", "escape_2" ,"escape_3","escape_4","escape_5","escape_6","escape_7","escape_8","escape_9",
"escape_11","escape_12","escape_13","escape_14","escape_15","escape_16","escape_17","escape_18","escape_19",
"escape_20","escape_21","escape_22","escape_23","escape_24","escape_25","escape_26","escape_28",
"escape1.1", "escape1.2" ,"escape1.3","escape1.4","escape1.5","escape1.6","escape1.7","escape1.8","escape1.9",
"escape1.11","escape1.12","escape1.13","escape1.14","escape1.15","escape1.16","escape1.17","escape1.18","escape1.19",
"escape1.20","escape1.21","escape1.22","escape1.23","escape1.24","escape1.25","escape1.26","escape1.28",
"escape.acc", "escape.ben", "escape.cost", "escape.fam", "escape.pref",
"escape.pre.acc", "escape.pre.ben", "escape.pre.cost", "escape.pre.fam", "escape.pre.pref", "pawprint")]
setDT(total.escape)[, id := .GRP, by = pawprint]
write.table(total.escape, file="/Users/kdvdnf/Box\ Sync/Mizzou\ Projects/Screening\ Cues\ Questionnaire/CFA.ICC.Validity-Fall\ 2017/Data/reliability.dat", row.names=FALSE, sep="\t", quote=FALSE)
setDT(total.mplus)[, id := .GRP, by = pawprint]
write.table(total.mplus, file="/Users/kdvdnf/Box\ Sync/Mizzou\ Projects/Screening\ Cues\ Questionnaire/CFA.ICC.Validity-Fall\ 2017/Data/reliability.all.dat", row.names=FALSE, sep="\t", quote=FALSE)
